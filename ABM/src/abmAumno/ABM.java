/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package abmAumno;

import dao.AlumnoDAOBD;
import dao.AlumnoDAOTxt;
import dao.DAOException;
import java.awt.HeadlessException;
import java.io.File;
import java.io.FileNotFoundException;
import java.text.ParseException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import persona.Alumno;
import persona.FechaInvalidaException;
import persona.MiCalendar;
import persona.PersonaInvalidaException;

/**
 *
 * @author nestor
 */
public class ABM extends javax.swing.JFrame {

    private File archivoAbierto;
    private boolean nuevo;
    private AlumnoDAOBD daoSQL;

    /**
     * Creates new form ABM
     */
    public ABM() {
        initComponents();

        setEstadoDefault();

        miModeloTabla = new MiModeloTabla();

        tabla.setModel(miModeloTabla);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nuevoButton = new javax.swing.JButton();
        abrirButton = new javax.swing.JButton();
        guardarButton = new javax.swing.JButton();
        borrarButton = new javax.swing.JButton();
        cancelarButton = new javax.swing.JButton();
        dniFormattedTextField = new javax.swing.JFormattedTextField();
        apynTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        sexoComboBox = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        fechaNacDateChooser = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        cantMatAprobFormattedTextField = new javax.swing.JFormattedTextField();
        jLabel5 = new javax.swing.JLabel();
        fechaIngrDateChooser = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        promedioFormattedTextField = new javax.swing.JFormattedTextField();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        archivoTextField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        seleccionarArchivoButton = new javax.swing.JButton();
        estadoComboBox = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        mostrarComboBox = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(6, 10));

        nuevoButton.setText("Nuevo");
        nuevoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoButtonActionPerformed(evt);
            }
        });

        abrirButton.setText("Abrir");
        abrirButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abrirButtonActionPerformed(evt);
            }
        });

        guardarButton.setText("Guardar");
        guardarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarButtonActionPerformed(evt);
            }
        });

        borrarButton.setText("Borrar");
        borrarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrarButtonActionPerformed(evt);
            }
        });

        cancelarButton.setText("Cancelar");
        cancelarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarButtonActionPerformed(evt);
            }
        });

        dniFormattedTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        apynTextField.setMaximumSize(new java.awt.Dimension(6, 24));

        jLabel1.setText("DNI");

        jLabel2.setText("Apell y Nom");

        sexoComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-", "M", "F" }));

        jLabel3.setText("Sexo");

        jLabel4.setText("Fecha Nac.");

        cantMatAprobFormattedTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        jLabel5.setText("Cant. Mat. Aprob.");

        jLabel6.setText("Fecha Ingr.");

        promedioFormattedTextField.setToolTipText("");

        jLabel7.setText("Promedio");

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabla);

        jLabel8.setText("Alumnos");

        archivoTextField.setEditable(false);
        archivoTextField.setText("Vacio");

        jLabel9.setText("Archivo");

        seleccionarArchivoButton.setText("...");
        seleccionarArchivoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seleccionarArchivoButtonActionPerformed(evt);
            }
        });

        estadoComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A", "B", "-" }));
        estadoComboBox.setSelectedIndex(2);

        jLabel10.setText("Estado");

        mostrarComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todos", "Altas", "Bajas", "-" }));
        mostrarComboBox.setSelectedIndex(3);
        mostrarComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mostrarComboBoxActionPerformed(evt);
            }
        });

        jLabel11.setText("Mostrar");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dniFormattedTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE)
                                    .addComponent(jLabel1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(0, 121, Short.MAX_VALUE))
                                    .addComponent(apynTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(sexoComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(fechaNacDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cantMatAprobFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(43, 43, 43))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(fechaIngrDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel6))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel7)
                                            .addComponent(promedioFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel10)
                                            .addComponent(estadoComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jLabel9)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(archivoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(seleccionarArchivoButton))
                                    .addComponent(jLabel8))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(cancelarButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(borrarButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(guardarButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(abrirButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(nuevoButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mostrarComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(15, 15, 15))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(archivoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(seleccionarArchivoButton)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mostrarComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(nuevoButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(abrirButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(guardarButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(borrarButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(apynTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(dniFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(sexoComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(fechaNacDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cantMatAprobFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(promedioFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(estadoComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(fechaIngrDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cancelarButton)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 308, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nuevoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoButtonActionPerformed
        setEstadoNuevo();
        nuevo = true;
    }//GEN-LAST:event_nuevoButtonActionPerformed

    private void seleccionarArchivoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seleccionarArchivoButtonActionPerformed

        Object[] options = {"MySQL", "TXT"};
        int opt = JOptionPane.showOptionDialog(this, "Que tipo de base de datos desea usar?", "Tipo de Base de datos", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, null);

        if (opt == JOptionPane.YES_OPTION) {
            openMySQL();
        }else{
            openTXT();
        }

        
    }//GEN-LAST:event_seleccionarArchivoButtonActionPerformed


    private void cancelarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarButtonActionPerformed
        setEstadoInicial();
        nuevo = false;
        dniFormattedTextField.setText("");
        apynTextField.setText("");
        fechaNacDateChooser.setDate(null);
        cantMatAprobFormattedTextField.setText("");
        fechaIngrDateChooser.setDate(null);
        promedioFormattedTextField.setText("");
        estadoComboBox.setSelectedIndex(2);
        sexoComboBox.setSelectedIndex(0);


    }//GEN-LAST:event_cancelarButtonActionPerformed

    private void guardarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarButtonActionPerformed
        Alumno alu;

        try {
            alu = formularioAAlumno();
        } catch (FormularioException | PersonaInvalidaException | FechaInvalidaException ex) {
            Logger.getLogger(ABM.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (!nuevo) { //si presiono el boton Abrir hago directamente actualizacion
            try {
                dao.actualizar(alu);
                actualizarLista();
            } catch (DAOException ex) {
                Logger.getLogger(ABM.class.getName()).log(Level.SEVERE, ex.getMessage(), ex);
                JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {// si presiono el boton nuevo y..
            try {

                if (dao.existe(alu.getDni()) && dao.estaActivo(alu.getDni())) { //... existe y esta activo pregunto si quiere actualizar

                    Object[] options = {"Actualizar", "Cancelar"};
                    int opt = JOptionPane.showOptionDialog(this, "El alumno con DNI " + alu.getDni() + " ya existe, Desea Actualizarlo?", "Error", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE, null, options, null);

                    if (opt == JOptionPane.NO_OPTION) {
                        setEstadoInicial();
                        return;
                    }

                    dao.actualizar(alu);
                    actualizarLista();

                } else if (dao.existe(alu.getDni()) && !dao.estaActivo(alu.getDni())) {//...y NO esta activo pregunto si quiere reactivarlo y actualizar
                    Object[] options = {"Reactivar", "Actualizar", "Cancelar"};
                    int opt = JOptionPane.showOptionDialog(this, "El alumno con DNI " + alu.getDni() + " ya existe, desea reactivarlo o actualizarlo?", "Error", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE, null, options, null);

                    switch (opt) {
                        case JOptionPane.YES_OPTION://reactivar
                            alu = dao.buscar(alu.getDni());
                            alu.setEstado('A');
                            dao.actualizar(alu);
                            actualizarLista();
                            break;
                        case JOptionPane.NO_OPTION:
                            dao.actualizar(alu);
                            actualizarLista();
                            break;
                        default:
                            setEstadoInicial();
                            return;
                    }
                    actualizarLista();

                } else { // Si no existe lo inserto
                    dao.insertar(alu);
                    actualizarLista();
                }

            } catch (DAOException ex) {
                Logger.getLogger(ABM.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        setEstadoInicial();
    }//GEN-LAST:event_guardarButtonActionPerformed


    private void abrirButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abrirButtonActionPerformed
        try {
            dniFormattedTextField.commitEdit();
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(this, "Numero de Dni incorrecto.", "Error", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(ABM.class.getName()).log(Level.SEVERE, null, ex);
            return;
        }

        Alumno alu = null;
        try {
            alu = dao.buscar(((Long) dniFormattedTextField.getValue()).intValue());
        } catch (DAOException ex) {
            Logger.getLogger(ABM.class.getName()).log(Level.SEVERE, null, ex);
        }

        if (alu == null) {
            JOptionPane.showMessageDialog(this, "Alumno no encontrado.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            alumnoAFormulario(alu);
        } catch (FechaInvalidaException ex) {
            Logger.getLogger(ABM.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Error al cargar alumno, fechas invalidas.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        nuevo = false;
        setEstadoAbrir();
    }//GEN-LAST:event_abrirButtonActionPerformed

    private void borrarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrarButtonActionPerformed

        JOptionPane.showMessageDialog(this, "Esta funcion se encuentra deshabilitada");

    }//GEN-LAST:event_borrarButtonActionPerformed

    private void mostrarComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mostrarComboBoxActionPerformed
        actualizarLista();
    }//GEN-LAST:event_mostrarComboBoxActionPerformed

    private Alumno formularioAAlumno() throws FormularioException, PersonaInvalidaException, FechaInvalidaException {
        Alumno alu = new Alumno();

        commitEdit(dniFormattedTextField, "El DNI es Inválido");

        alu.setDni(((Long) dniFormattedTextField.getValue()).intValue());

        alu.setApyn(apynTextField.getText());

        if (((String) sexoComboBox.getSelectedItem()).charAt(0) == '-') {
            throw new FormularioException("El sexo es invalido");
        } else {
            alu.setSexo(((String) sexoComboBox.getSelectedItem()).charAt(0));
        }

        alu.setFechaNac(new MiCalendar(fechaNacDateChooser.getCalendar()));

        commitEdit(cantMatAprobFormattedTextField, "La Cant Mat Aprob es inválida");

        alu.setCantMatAprob(((Long) cantMatAprobFormattedTextField.getValue()).intValue());

        commitEdit(promedioFormattedTextField, "El promedio es inválido");

        try {
            alu.setPromedio(Double.valueOf(promedioFormattedTextField.getText().replace(',', '.')));
        } catch (NumberFormatException e) {
            throw new FormularioException("El promedio es inválido");//Juan
        }

        alu.setFechaIngr(new MiCalendar(fechaIngrDateChooser.getCalendar()));

        if (((String) estadoComboBox.getSelectedItem()).charAt(0) == '-') {
            throw new FormularioException("El estado es invalido");
        } else {
            alu.setEstado(((String) estadoComboBox.getSelectedItem()).charAt(0));
        }

        return alu;
    }

    private void commitEdit(JFormattedTextField formattedTextField, String mensaje) throws FormularioException {
        try {
            formattedTextField.commitEdit();
        } catch (ParseException ex) {
            Logger.getLogger(ABM.class.getName()).log(Level.SEVERE, null, ex);
            throw new FormularioException(mensaje + ": " + ex.getMessage());
        }
    }

    private void setEstadoInicial() {
        archivoTextField.setEnabled(true);

        dniFormattedTextField.setEnabled(true);

        seleccionarArchivoButton.setEnabled(true);

        nuevoButton.setEnabled(true);
        abrirButton.setEnabled(true);
        guardarButton.setEnabled(false);
        borrarButton.setEnabled(false);
        cancelarButton.setEnabled(false);

        apynTextField.setEnabled(false);
        sexoComboBox.setEnabled(false);
        fechaNacDateChooser.setEnabled(false);
        cantMatAprobFormattedTextField.setEnabled(false);
        fechaIngrDateChooser.setEnabled(false);
        promedioFormattedTextField.setEnabled(false);
        estadoComboBox.setEnabled(false);
        mostrarComboBox.setEnabled(true);

        dniFormattedTextField.setText("");
        apynTextField.setText("");
        cantMatAprobFormattedTextField.setText("");
        promedioFormattedTextField.setText("");
        sexoComboBox.setSelectedIndex(0);
        fechaNacDateChooser.setDate(null);
        fechaIngrDateChooser.setDate(null);
        estadoComboBox.setSelectedIndex(2);

        nuevo = false;
    }

    private void setEstadoDefault() {
        archivoTextField.setEnabled(true);
        seleccionarArchivoButton.setEnabled(true);

        dniFormattedTextField.setEnabled(false);
        apynTextField.setEnabled(false);
        sexoComboBox.setEnabled(false);
        fechaNacDateChooser.setEnabled(false);
        cantMatAprobFormattedTextField.setEnabled(false);
        fechaIngrDateChooser.setEnabled(false);
        promedioFormattedTextField.setEnabled(false);
        estadoComboBox.setEnabled(false);

        nuevoButton.setEnabled(false);
        abrirButton.setEnabled(false);
        guardarButton.setEnabled(false);
        borrarButton.setEnabled(false);
        cancelarButton.setEnabled(false);
        mostrarComboBox.setEnabled(false);
        estadoComboBox.setSelectedIndex(2);
        sexoComboBox.setSelectedIndex(0);

    }

    private void setEstadoNuevo() {
        archivoTextField.setEnabled(false);
        seleccionarArchivoButton.setEnabled(false);

        dniFormattedTextField.setEnabled(true);
        apynTextField.setEnabled(true);
        sexoComboBox.setEnabled(true);
        fechaNacDateChooser.setEnabled(true);
        cantMatAprobFormattedTextField.setEnabled(true);
        fechaIngrDateChooser.setEnabled(true);
        promedioFormattedTextField.setEnabled(true);
        estadoComboBox.setEnabled(true);
        mostrarComboBox.setEditable(false);

        dniFormattedTextField.setText("");
        apynTextField.setText("");
        cantMatAprobFormattedTextField.setText("");
        promedioFormattedTextField.setText("");
        sexoComboBox.setSelectedIndex(0);
        fechaNacDateChooser.setDate(null);
        fechaIngrDateChooser.setDate(null);
        estadoComboBox.setSelectedIndex(2);

        nuevoButton.setEnabled(false);
        abrirButton.setEnabled(false);

        guardarButton.setEnabled(true);
        borrarButton.setEnabled(false);
        cancelarButton.setEnabled(true);

        nuevo = true;
    }

    private void actualizarLista() {
        switch (mostrarComboBox.getSelectedIndex()) {
            case 0: //todos
                miModeloTabla.setLista(dao.getTodos());
                break;
            case 1: //altas
                miModeloTabla.setLista(dao.getALtas());
                break;
            case 2: //bajas
                miModeloTabla.setLista(dao.getBajas());
                break;
            default:

                mostrarComboBox.setSelectedIndex(0);
                miModeloTabla.setLista(dao.getTodos());
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ABM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ABM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ABM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ABM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ABM().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton abrirButton;
    private javax.swing.JTextField apynTextField;
    private javax.swing.JTextField archivoTextField;
    private javax.swing.JButton borrarButton;
    private javax.swing.JButton cancelarButton;
    private javax.swing.JFormattedTextField cantMatAprobFormattedTextField;
    private javax.swing.JFormattedTextField dniFormattedTextField;
    private javax.swing.JComboBox<String> estadoComboBox;
    private com.toedter.calendar.JDateChooser fechaIngrDateChooser;
    private com.toedter.calendar.JDateChooser fechaNacDateChooser;
    private javax.swing.JButton guardarButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> mostrarComboBox;
    private javax.swing.JButton nuevoButton;
    private javax.swing.JFormattedTextField promedioFormattedTextField;
    private javax.swing.JButton seleccionarArchivoButton;
    private javax.swing.JComboBox<String> sexoComboBox;
    private javax.swing.JTable tabla;
    // End of variables declaration//GEN-END:variables

    private AlumnoDAOTxt dao;
    private MiModeloTabla miModeloTabla;

    private void setEstadoAbrir() {
        archivoTextField.setEnabled(false);
        seleccionarArchivoButton.setEnabled(false);

        dniFormattedTextField.setEnabled(false);
        apynTextField.setEnabled(true);
        sexoComboBox.setEnabled(true);
        fechaNacDateChooser.setEnabled(true);
        cantMatAprobFormattedTextField.setEnabled(true);
        fechaIngrDateChooser.setEnabled(true);
        promedioFormattedTextField.setEnabled(true);
        estadoComboBox.setEnabled(true);

        nuevoButton.setEnabled(false);
        abrirButton.setEnabled(false);
        guardarButton.setEnabled(true);
        borrarButton.setEnabled(true);
        cancelarButton.setEnabled(true);

        nuevo = false;
    }

    private void alumnoAFormulario(Alumno alu) throws FechaInvalidaException {

        dniFormattedTextField.setText(((Integer) alu.getDni()).toString());
        apynTextField.setText(alu.getApyn());

        switch (alu.getSexo()) {
            case 'F':
                sexoComboBox.setSelectedIndex(2);
                break;
            case 'M':
                sexoComboBox.setSelectedIndex(1);
                break;
            default:
                sexoComboBox.setSelectedIndex(0);
        }

        fechaNacDateChooser.setCalendar(alu.getFechaNac());
        cantMatAprobFormattedTextField.setText(((Integer) alu.getCantMatAprob()).toString());
        fechaIngrDateChooser.setCalendar(alu.getFechaIngr());
        promedioFormattedTextField.setText(((Double) alu.getPromedio()).toString());

        if (alu.getEstado() == 'A') {
            estadoComboBox.setSelectedIndex(0);
        } else {
            estadoComboBox.setSelectedIndex(1);
        }
    }

    private void openMySQL() {
        daoSQL = new AlumnoDAOBD();
        
        setEstadoInicial();
        archivoTextField.setText("MySQL");

        actualizarLista();
        mostrarComboBox.setSelectedIndex(0);
    }

    private void openTXT() {
        JFileChooser fileChooser = new JFileChooser();

        int resp = fileChooser.showOpenDialog(this);

        if (resp != JFileChooser.APPROVE_OPTION) {
            return;
        }

        archivoAbierto = fileChooser.getSelectedFile();

        try {
            dao = new AlumnoDAOTxt(archivoAbierto);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(ABM.class.getName()).log(Level.SEVERE, null, ex);
        }

        setEstadoInicial();
        archivoTextField.setText(archivoAbierto.getAbsolutePath());

        actualizarLista();
        mostrarComboBox.setSelectedIndex(0);
    }
}
